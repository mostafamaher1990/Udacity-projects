{"version":3,"sources":["components/TitleApp.js","components/Book.js","components/BookShelf.js","components/MainShelf.js","components/BooksAPI.js","App.js","index.js"],"names":["TitleApp","className","Book","book","updateShelf","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","shelf","onChange","event","target","value","disabled","title","authors","React","memo","BookShelf","books","shelfName","map","id","MainShelf","search","bookFound","currentlyReading","filter","wantToRead","read","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","body","JSON","stringify","then","res","json","App","useState","showSearchPage","setShowSearchpage","oneBook","setOneBooks","setSearch","setBookFound","currentBook","newShelf","updatedShelf","BooksAPI","data","console","log","useEffect","query","maxResults","on","error","path","element","onClick","type","placeholder","bookFoundInShelf","find","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2595c64.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction TitleApp() {\r\n  return (\r\n    <div className=\"list-books-title\">\r\n      <h1>MyReads</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TitleApp;","import React from \"react\";\r\n\r\nfunction Book({ book, updateShelf }) {\r\n  \r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            backgroundImage: `url(${book.imageLinks?.thumbnail})`,\r\n          }}\r\n        ></div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select\r\n          \r\n            defaultValue={book.shelf ? book.shelf : \"none\"}\r\n           \r\n            onChange={(event) => updateShelf(book, event.target.value)}\r\n          >\r\n            <option value=\"none\" disabled>\r\n              Move to...\r\n            </option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{book.title}</div>\r\n      <div className=\"book-authors\">{book.authors}</div>\r\n      <div className=\"book-authors\">{book.shelf ? book.shelf : \"none\"}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Book);","import React from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nfunction BookShelf({ books, shelfName, updateShelf }) {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map((book) => (\r\n            <li key={book.id}>\r\n              <Book\r\n                book={book}\r\n                shelfName=\"Currently Reading\"\r\n                updateShelf={updateShelf}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookShelf;","import React from \"react\";\r\nimport BookShelf from \"./BookShelf\";\r\n\r\n\r\n\r\nfunction MainShelf({ books, updateShelf, book,search, bookFound }) {\r\n  const currentlyReading = books.filter(\r\n    (book) => book.shelf === \"currentlyReading\"\r\n  );  \r\n\r\n  const wantToRead = books.filter((book) => book.shelf === \"wantToRead\");\r\n\r\n \r\n  const read = books.filter((book) => book.shelf === \"read\");\r\n\r\n  return (\r\n    <div>\r\n      <BookShelf\r\n        shelfName=\"Currently Reading\"\r\n        books={currentlyReading}\r\n        updateShelf={updateShelf}\r\n        book={book}\r\n        search={search}\r\n        bookFound={bookFound}\r\n      />\r\n      <BookShelf\r\n        shelfName=\"Want To Read\"\r\n        books={wantToRead}\r\n        updateShelf={updateShelf}\r\n        \r\n      />\r\n\r\n      <BookShelf shelfName=\"Read\" books={read} updateShelf={updateShelf} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainShelf;","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport TitleApp from \"./components/TitleApp\";\r\nimport MainShelf from \"./components/MainShelf\";\r\nimport * as BooksAPI from \"./components/BooksAPI\";\r\nimport Book from \"./components/Book\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  const [oneBook, setOneBooks] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [bookFound, setBookFound] = useState([]);\r\n  const [updatedFromSearch, setUpdatedFromSearch] = useState([]);\r\n\r\n  \r\n  useEffect(() => {\r\n    BooksAPI.getAll().then((data) => {\r\n     \r\n      setOneBooks(data);\r\n    });\r\n  }, []);\r\n\r\n \r\n  useEffect(() => {\r\n    let on = true;\r\n    if (search) {\r\n      BooksAPI.search(search).then((data) => {\r\n        if (data.error) {\r\n          setBookFound([]);\r\n        } else {\r\n          if (on) {\r\n            console.log(data);\r\n            setBookFound(data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      on = false;\r\n      setBookFound([]);\r\n    };\r\n  }, [search]);\r\n\r\n  \r\n  function updateShelf(currentBook, newShelf) {\r\n    const updatedShelf = oneBook.map((book) => {\r\n      return book.id === currentBook.id && (currentBook.shelf = newShelf)\r\n        ? currentBook\r\n        : book;\r\n   \r\n    });\r\n    setOneBooks(updatedShelf);\r\n    BooksAPI.update(currentBook, newShelf).then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  }\r\n\r\n  function updateShelfFromSearch(currentBook, newShelf) {\r\n    const updatedShelf = oneBook.map((book) => {\r\n      return book.id === currentBook.id && (currentBook.shelf = newShelf)\r\n        ? currentBook\r\n        : book;\r\n    });\r\n    setOneBooks(updatedShelf);\r\n    BooksAPI.update(currentBook, newShelf).then((data) => {\r\n      console.log(data);\r\n      return data;\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    \r\n    <div className=\"app\"> \r\n      <Routes>\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <div className=\"list-books\">\r\n              <TitleApp />\r\n              <div className=\"list-books-content\">\r\n                <MainShelf books={oneBook} updateShelf={updateShelf} />\r\n              </div>\r\n              <div className=\"open-search\">\r\n                <a onClick={() => setShowSearchpage(!showSearchPage)}>\r\n                  Add a book\r\n                </a>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          element={\r\n            <div className=\"search-books\">\r\n              <div className=\"search-books-bar\">\r\n                <a\r\n                  className=\"close-search\"\r\n                  onClick={() => setShowSearchpage(!showSearchPage)}\r\n                >\r\n                  Close\r\n                </a>\r\n                <div className=\"search-books-input-wrapper\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by title, author, or ISBN\"\r\n                    value={search}\r\n                    onChange={(event) => setSearch(event.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"search-books-results\">\r\n                <ol className=\"books-grid\">\r\n                  {bookFound.map((book) => {\r\n                    const bookFoundInShelf = oneBook.find(\r\n                      (b) => b.id === book.id\r\n                    );\r\n                    const shelf = bookFoundInShelf ? bookFoundInShelf.shelf : \"\";\r\n                    return (\r\n                      <li key={book.id}>\r\n                        <Book\r\n                          book={book}\r\n                          updateShelf={updateShelf}\r\n                          shelfName={shelf}\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n   \r\nexport default App;\r\n\r\n      \r\n\r\n        \r\n\r\n     \r\n\r\n\r\n\r\n\r\n     \r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}